git init
git remote add origin repository drectory

git pull origin master

git status
git add .
git commit -m "msg";
git push origin +master

git commit -m 하기전에
git config --global user.email
git config --global user.name
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
git rm -r --cached . 
캐시삭제. ignore안먹힐때. 하고 다시 add commit push 하기

.gitignore.txt

#, 빈라인	#은 주석을 의미하며, 빈라인은 아무런 영향을 주지 않습니다.
*.a	확장자가 .a 인 모든 파일을 무시합니다.
folder_name/	해당 폴더의 모든 파일을 무시합니다.
folder_name/*.a	해당 폴더의 확장자가 .a 인 모든 파일을 무시합니다.
folder_name/**/*.a	해당 폴더 포함한 하위 모든 폴더에서 확장자가 .a 인 모든 파일을 무시합니다.
/*.a	현재 폴더의 확장자가 .a 인 모든파일을 무시합니다.
----------------------------------------------------------------
git reset HEAD^                최근 커밋내역 1개 삭제
git reset HEAD^~2		최근 커밋내역 2개 삭제
git push -f origin 브랜치명 	깃허브도 같은 커밋내역 삭제 
-------------------------------------------------------------------
git remote add 저장소명 원격저장소url >>다른 원격저장소랑 연결

git clone 원격저장소url >> 현재 디렉터리에 원격저장소 연결된 클론 생성

git branch 브랜치명  >> 브랜치 생성 (로컬)
git checkout 브랜치명 >> 브랜치로 swich

git checkout -b 브랜치명 >>브랜치 생성 및 스위치
git push origin 브랜치명 
git branch --set-upstream 저장소명 브랜치명 >> 원격저장소에 브랜치를 추가함.  

git branch -d 브랜치명 >>로컬 삭제
git push origin :브랜치명 >> 원격저장소에서 삭제